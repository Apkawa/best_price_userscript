name: website

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        run: |
          npm set-script prepare ""
          npm ci

      - name: Build
        run: npm run build

      - name: Run unit tests
        run: npm run test:unit

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Run lint
        run: npm run lint

  publish:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        run: |
          npm set-script prepare ""
          npm ci

      - name: Build
        run: npm build

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Check tag
        run: |
          echo $RELEASE_VERSION 
          echo ${{ env.RELEASE_VERSION }}
        if: startsWith(github.ref, 'refs/tags')

      # Если мастер - деплоим в корень
      - uses: haya14busa/action-cond@v1
        id: target_folder
        if: success()
        with:
          cond: ${{ steps.extract_branch.outputs.branch == 'master' }}
          if_true: ""
          if_false: ${{ steps.extract_branch.outputs.branch }}

      - name: Deploy to Github Pages
        if: success()
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
          TARGET_FOLDER: ${{ steps.target_folder.outputs.value }}
